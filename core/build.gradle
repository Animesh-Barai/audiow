apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion defaultCompileSdkVersion

    defaultConfig {
        minSdkVersion defaultMinSdkVersion
        targetSdkVersion defaultTargetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    api "androidx.appcompat:appcompat:$appCompat"

    api "androidx.core:core-ktx:$kotlinKtx"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidLifecycle"
    api "com.github.hadilq.liveevent:liveevent:$liveEvent"

    api "com.jakewharton.threetenabp:threetenabp:$threetenabp"
    api "io.reactivex.rxjava2:rxjava:$rxVersion"
    api "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    api "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"

    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.tencent:mmkv:$mmkvVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // Test
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:core:$androidTest"
    androidTestImplementation "androidx.test:runner:$androidTest"
    androidTestImplementation "androidx.test.ext:junit:$androidTest"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidEspresso"
    androidTestImplementation "org.mockito:mockito-android:$mockito"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$nhaarman"
    
}
